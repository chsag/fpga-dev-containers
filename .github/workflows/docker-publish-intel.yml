name: Build & Publish

on:
  push:
    branches: [ master ]
    tags: [ 'v*.*.*' ]

env:
  REGISTRY: ghcr.io
  BASE_IMAGE: ubuntu:18.04
  GHDL_VERSION: 2.0.0
  VUNIT_VERSION: 4.6.0
  QUARTUS_VERSION: 20.1
  QUARTUS_PATCH: 1
  QUARTUS_BUILD: 720

jobs:

  base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: "BASE_IMAGE=${{ env.BASE_IMAGE }}"
          file: base.dockerfile
          push: true
          tags: "latest"

  ghdl:
    needs: base
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: "REPOSITORY=${{ github.repository_owner }},GHDL_VERSION=${{ env.GHDL_VERSION }}"
          file: ghdl.dockerfile
          push: true
          tags: "latest,${{ env.GHDL_VERSION }}"

  vunit:
    needs: ghdl
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: "REPOSITORY=${{ github.repository_owner }},VUNIT_VERSION=${{ env.VUNIT_VERSION }}"
          file: vunit.dockerfile
          push: true
          tags: "latest,${{ env.VUNIT_VERSION }}"

  quartus:
    needs: vunit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./intel
          build-args: "REPOSITORY=${{ github.repository_owner }},QUARTUS_VERSION=${{ env.QUARTUS_VERSION }},QUARTUS_PATCH=${{ env.QUARTUS_PATCH }},QUARTUS_BUILD=${{ env.QUARTUS_BUILD }}"
          file: quartus.dockerfile
          push: true
          tags: "latest,${{ env.QUARTUS_VERSION }}"

  intel:
    needs: quartus
    runs-on: ubuntu-latest

    strategy:
      matrix:
        DEVICE: [ cyclone10lp, max ]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.DEVICE }}-dev-container
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
  
      - name: Login to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          build-args: "REPOSITORY=${{ github.repository_owner }},QUARTUS_VERSION=${{ env.QUARTUS_VERSION }},QUARTUS_PATCH=${{ env.QUARTUS_PATCH }},QUARTUS_BUILD=${{ env.QUARTUS_BUILD }}"
          file: ${{ matrix.DEVICE }}.dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
